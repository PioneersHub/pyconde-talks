[project]
name = "pyconde-talks"
version = "0.1.0"
description = "Website for PyCon DE & PyData 2025 talks"
readme = "README.md"
requires-python = ">=3.13,<4"
authors = [{ name = "Julio Batista Silva", email = "python@juliobs.com" }]
license = { text = "MIT" }
keywords = [
    "conference",
    "django",
    "event",
    "pycon",
    "pyconde",
    "pydata",
    "speaker",
    "talks",
    "videos",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Web Environment",
    "Framework :: Django",
    "Framework :: Django :: 5.1",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.13",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
    "Topic :: Conference",
]
dependencies = [
    "argon2-cffi>=23.1.0",
    "daphne>=4.1.2",
    "django>=5.2",
    "django-allauth[socialaccount]>=65.7.0",
    "django-anymail[mailgun]>=13.0",
    "django-environ>=0.12.0",
    "django-health-check>=3.18.3",
    "django-htmx>=1.23.0",
    "django-structlog>=9.1.1",
    "django-template-partials>=24.4",
    "pillow>=11.2.1",
    "pytanis>=0.8",
    "requests>=2.32.3",
    "structlog>=25.2.0",
    "tenacity>=9.1.2",
]

[dependency-groups]
dev = [
    "bandit>=1.8.3",
    "django-stubs[compatible-mypy]>=5.1.3",
    "djlint>=1.36.4",
    "faker>=37.1.0",
    "ipython>=9.1.0",
    "mypy>=1.15.0",
    "pre-commit>=4.2.0",
    "ruff>=0.11.5",
    "types-requests>=2.32.0.20250328",
]
test = [
    "pytest>=8.3.5",
    "pytest-django>=4.11.1",
    "pytest-mock>=3.14.0",
    "pytest-random-order>=1.1.1",
    "responses>=0.25.7",
]

[project.urls]
Homepage = "https://2025.pycon.de/talks/"
Documentation = "https://github.com/PioneersHub/pyconde-talks#readme"
Repository = "https://github.com/PioneersHub/pyconde-talks"
CI = "https://github.com/PioneersHub/pyconde-talks/actions"
Issues = "https://github.com/PioneersHub/pyconde-talks/issues"

[tool.mypy]
python_version = "3.13"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
check_untyped_defs = true
plugins = ["mypy_django_plugin.main"]

[tool.django-stubs]
django_settings_module = "pyconde_talks.settings"

[tool.djlint]
profile = "django"
indent = 2
line_length = 100
ignore = "H014,H021"

[tool.ruff]
line-length = 100
indent-width = 4
target-version = "py313"
fix = true
unsafe-fixes = false

[tool.ruff.lint.flake8-pytest-style]
fixture-parentheses = true

[tool.ruff.lint.flake8-annotations]
allow-star-arg-any = true

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "D200", # one-line-summary
    "D203", # one-blank-line-before-class
    "D212", # multi-line-summary-first-line
]

[tool.ruff.lint.per-file-ignores]
"**/tests/{test_*.py,conftest.py}" = [
    "S101",   # Allow assert in tests
    "S106",   # Allow hardcoded password in tests
    "ARG001", # Allow unused arguments in tests (for pytest fixtures)
]
"**/__init__.py" = [
    "D104", # Allow empty __init__.py files
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "lf"

[tool.ruff.lint.isort]
combine-as-imports = true
force-wrap-aliases = true
lines-after-imports = 2

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "pyconde_talks.settings"
python_files = ["test_*.py"]
addopts = [
    "-ra",
    "--durations=10",
    "--import-mode=importlib",
    "--random-order",
    "--tb=short",
    "--verbose",
]
